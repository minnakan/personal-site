# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
      - name: Clean install
        shell: bash
        run: |
          if [ -d "node_modules" ]; then rm -rf node_modules; fi
          if [ -f "package-lock.json" ]; then rm package-lock.json; fi
          npm cache clean --force
          npm install --no-audit --no-fund --no-package-lock
      - name: Lint
        run: npm run lint

  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        node-version: [20.x]
        os: [ubuntu-22.04, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Clean install
        shell: bash
        run: |
          if [ -d "node_modules" ]; then rm -rf node_modules; fi
          if [ -f "package-lock.json" ]; then rm package-lock.json; fi
          npm cache clean --force
          npm install --no-audit --no-fund --no-package-lock
      - name: Build and Statically Render
        shell: bash
        run: |
          function retry {
            local n=1
            local max=5
            local delay=1
            while true; do
              "$@" && break || {
                if [[ $n -lt $max ]]; then
                  ((n++))
                  echo "Command failed. Attempt $n/$max:"
                  sleep $delay;
                else
                  echo "The command has failed after $n attempts."
                  return 1
                fi
              }
            done
          }
          retry npm run predeploy
        env:
          NODE_ENV: development
      - name: Test
        run: npm test
        env:
          NODE_ENV: development
